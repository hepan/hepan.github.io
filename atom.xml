<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-30T08:41:12.096Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>STOMP协议+springboot-websocket</title>
    <link href="http://yoursite.com/2019/04/24/STOMP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2019/04/24/STOMP协议/</id>
    <published>2019-04-24T05:28:17.000Z</published>
    <updated>2019-04-30T08:41:12.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>stomp是一个协议，用于处理</p><h2 id="http、websocket、stomp的关系"><a href="#http、websocket、stomp的关系" class="headerlink" title="http、websocket、stomp的关系"></a>http、websocket、stomp的关系</h2><p>HTTP、WebSocket 等应用层协议，都是基于 TCP 协议来传输数据的。</p><p>HTTP不足在于它与服务器的全双工通信依靠轮询实现，对于需要从服务器主动发送数据的情境，会给服务器资源造成很大的浪费，WebSocket是针对HTTP在这种情况下的补充。对于 WebSocket 来说，它必须依赖 HTTP 协议进行一次握手 ，握手成功后，数据就直接从 TCP 通道传输，与 HTTP 无关了。</p><p>WebSocket是一个完整的应用层协议，包含一套标准的 API 。</p><p>STOMP即Simple (or Streaming) Text Orientated Messaging Protocol，简单(流)文本定向消息协议，它提供了一个可互操作的连接格式，允许STOMP客户端与任意STOMP消息代理（Broker）进行交互。</p><p>STOMP协议可以建立在WebSocket之上，也可以建立在其他应用层协议之上。</p><h2 id="STOMP-JS"><a href="#STOMP-JS" class="headerlink" title="STOMP.JS"></a>STOMP.JS</h2><ul><li>stomp.js是对stomp客户端的封装。</li><li>提供多种版本供开发使用</li><li>stomp.js不仅可以连接常规的stomp服务。还可以连接一些MQ服务。例如,RabbitMQ,ActiveMQ等。<h2 id="STOMP-API"><a href="#STOMP-API" class="headerlink" title="STOMP API"></a>STOMP API</h2></li></ul><p>//TODO 带填</p><h3 id="STOMP-帧"><a href="#STOMP-帧" class="headerlink" title="STOMP 帧"></a>STOMP 帧</h3><p>STOMP帧由命令，一个或多个头信息、一个空行及负载（文本或字节）所组成；</p><p>其中可用的COMMAND 包括：<code>CONNECT、SEND、SUBSCRIBE、UNSUBSCRIBE、BEGIN、COMMIT、ABORT、ACK、NACK、DISCONNECT；</code></p><h2 id="springboot-websocket-stomp-js"><a href="#springboot-websocket-stomp-js" class="headerlink" title="springboot websocket + stomp.js"></a>springboot websocket + stomp.js</h2><p>使用springboot全家桶+stomp.js可以做到快速发布订阅服务。</p><h3 id="maven配置"><a href="#maven配置" class="headerlink" title="maven配置"></a>maven配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── main</span><br><span class="line">│   ├── java</span><br><span class="line">│   │   └── io</span><br><span class="line">│   │       └── github</span><br><span class="line">│   │           └── hepan</span><br><span class="line">│   │               └── springboot</span><br><span class="line">│   │                   └── stomp</span><br><span class="line">│   │                       └── demo</span><br><span class="line">│   │                           ├── STOMPApp.java        //启动类</span><br><span class="line">│   │                           ├── config</span><br><span class="line">│   │                           │   └── WebsocketConfig.java   //配置</span><br><span class="line">│   │                           ├── controller</span><br><span class="line">│   │                           │   └── MessageController.java  //app模式下调用入口</span><br><span class="line">│   │                           └── websocket</span><br><span class="line">│   │                               ├── StompUserRepository.java  //用户与资源缓存</span><br><span class="line">│   │                               ├── WebSocketEventerListener.java  //websocket监听</span><br><span class="line">│   │                               └── WebSocketHandlerInterceptor.java  //websocket命令拦截器</span><br><span class="line">│   └── resources</span><br><span class="line">│       └── application.yml</span><br><span class="line">└── test</span><br><span class="line">    └── resource</span><br><span class="line">        └── static</span><br><span class="line">            └── stomp-test.html   //静态页面</span><br></pre></td></tr></table></figure><h2 id="java主要代码"><a href="#java主要代码" class="headerlink" title="java主要代码"></a>java主要代码</h2><p>需要注意的地方：</p><p>1 WebsocketConfig中/app 这个地址用于访问后台的前缀，可以设置多个</p><p>例如 测试html中访问后台接口<code>/bind/{resource}</code>时前端需写的地址为 <code>/app/test/user123</code></p><p>2 topic为客户端订阅消息的前缀</p><p>3 ws为连接后端服务时用的后缀</p><p>WebsocketConfig 用于设置websocket配置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSocketMessageBroker</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebsocketConfig</span> <span class="keyword">implements</span> <span class="title">WebSocketMessageBrokerConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerStompEndpoints</span><span class="params">(StompEndpointRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addEndpoint(<span class="string">"/ws"</span>).setAllowedOrigins(<span class="string">"*"</span>).withSockJS();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureMessageBroker</span><span class="params">(MessageBrokerRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 设置接收客户端消息 的 路径前缀（不设置可以）</span></span><br><span class="line">        registry.setApplicationDestinationPrefixes(<span class="string">"/app"</span>);</span><br><span class="line">        <span class="comment">// 设置接收客户端订阅 的 路径前缀（必须不设置，可以为空串）</span></span><br><span class="line">        registry.enableSimpleBroker(<span class="string">"/topic"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureClientInboundChannel</span><span class="params">(ChannelRegistration registration)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 添加拦截器，处理客户端发来的请求</span></span><br><span class="line">        registration.interceptors(<span class="keyword">new</span> WebSocketHandlerInterceptor());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>WebSocketEventerListener 监听连接与断开事件。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-04-26 14:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSocketEventerListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(WebSocketEventerListener.class);</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StompUserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleConnectListener</span><span class="params">(SessionConnectedEvent event)</span></span>&#123;</span><br><span class="line">        log.info(<span class="string">"[ws-连接]  &#123;&#125;"</span>,event.getMessage());</span><br><span class="line">        StompHeaderAccessor accessor = StompHeaderAccessor.wrap(event.getMessage());</span><br><span class="line">        userRepository.addUser(accessor.getUser());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDisconnectListener</span><span class="params">(SessionDisconnectEvent event)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"[ws-断开]  &#123;&#125;"</span>,event.getMessage());</span><br><span class="line">        StompHeaderAccessor accessor = StompHeaderAccessor.wrap(event.getMessage());</span><br><span class="line">        userRepository.releaseUser(accessor.getUser());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>WebSocketHandlerInterceptor commind命令拦截器。可以根据command的不同添加一些自己的预处理逻辑。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-04-26 15:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSocketHandlerInterceptor</span> <span class="keyword">implements</span> <span class="title">ChannelInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Message&lt;?&gt; preSend(Message&lt;?&gt; message, MessageChannel channel) &#123;</span><br><span class="line">        StompHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, StompHeaderAccessor.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(StompCommand.CONNECT.equals(accessor.getCommand()))&#123;</span><br><span class="line">            String userId=accessor.getFirstNativeHeader(<span class="string">"userId"</span>);</span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isEmpty(userId))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Principal principal=<span class="keyword">new</span> UserPrincipal(userId);</span><br><span class="line">            accessor.setUser(principal);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>StompUserRepository 用户与资源的存储，这里有一些业务上的需求。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 存储用户与资源的绑定关系，一个用户同一时间只占有一个资源。一个资源不可同时被两个用户占有</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019-04-26 15:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StompUserRepository</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(StompUserRepository.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String , String&gt; userRepo=<span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Map&lt;String ,String&gt;  resourceRepo=<span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(Principal principal)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ObjectUtils.isEmpty(principal))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        userRepo.put(principal.getName(),<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为user添加resource，</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> principal</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true：添加成功</span></span><br><span class="line"><span class="comment">     *         false：1-&gt;resource已被占有。2-&gt;入参为null或""。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addRepo</span><span class="params">(Principal principal,String resource)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ObjectUtils.isEmpty(principal)||StringUtils.isEmpty(resource))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//已经被占有的资源返回错误</span></span><br><span class="line">        String name=resourceRepo.get(resource);</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(name))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String resInRepo=userRepo.get(principal.getName());</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(resInRepo))&#123;</span><br><span class="line">            log.info(<span class="string">"[SUR] name-&gt;[&#123;&#125;] resource from[&#123;&#125;] to[&#123;&#125;]"</span>,name,resInRepo,resource);</span><br><span class="line">        &#125;</span><br><span class="line">        userRepo.put(principal.getName(),resource);</span><br><span class="line">        resourceRepo.put(resource,principal.getName());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放user与user所占有resource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> principal</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">releaseUser</span><span class="params">(Principal principal)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ObjectUtils.isEmpty(principal))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String resource=userRepo.get(principal.getName());</span><br><span class="line">        userRepo.remove(principal);</span><br><span class="line">        resourceRepo.remove(resource);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放resource并解除user与resource的绑定关系</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resource</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">releaseResource</span><span class="params">(Principal principal,String resource)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(resource))&#123;</span><br><span class="line">            log.info(<span class="string">"[release-resource] 释放失败 资源isEmpty"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!userRepo.containsKey(principal.getName()))&#123;</span><br><span class="line">            log.info(<span class="string">"[release-resource] 释放失败 资源中未找到[&#123;&#125;]"</span>,principal.getName());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        String name=resourceRepo.get(resource);</span><br><span class="line">        <span class="keyword">if</span>(name.equalsIgnoreCase(principal.getName()))&#123;</span><br><span class="line">            log.info(<span class="string">"[release-resource] 释放失败 当前绑定资源用户与释放资源用户不一致 resource-&gt;&#123;&#125; from user-&gt;&#123;&#125; to-&gt;&#123;&#125;"</span></span><br><span class="line">                    ,resource,name,principal.getName());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resourceRepo.remove(resource);</span><br><span class="line">        userRepo.put(name,<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>MessageController<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = LoggerFactory.getLogger(MessageController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SimpMessagingTemplate simpMessagingTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StompUserRepository stompUserRepository;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@MessageMapping</span>(<span class="string">"/test/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(Message message,</span></span></span><br><span class="line"><span class="function"><span class="params">                     MessageHeaders MessageHeaders,</span></span></span><br><span class="line"><span class="function"><span class="params">                     @Header(<span class="string">"destination"</span>)</span> String destination,</span></span><br><span class="line"><span class="function">                     @Headers Map&lt;String, Object&gt; headers,</span></span><br><span class="line"><span class="function">                     @DestinationVariable String id,</span></span><br><span class="line"><span class="function">                     @Payload String body) </span>&#123;</span><br><span class="line">        log.info(<span class="string">"[test] Message: &#123;&#125;"</span>, message);</span><br><span class="line">        log.info(<span class="string">"[test] MessageHeaders: &#123;&#125;"</span>, MessageHeaders);</span><br><span class="line">        log.info(<span class="string">"[test] Header: &#123;&#125;"</span>, destination);</span><br><span class="line">        log.info(<span class="string">"[test] Headers: &#123;&#125;"</span>, headers);</span><br><span class="line">        log.info(<span class="string">"[test] DestinationVariable: &#123;&#125;"</span>, id);</span><br><span class="line">        log.info(<span class="string">"[test] Payload: &#123;&#125;"</span>, body);</span><br><span class="line"></span><br><span class="line">        System.out.println(id+<span class="string">"----------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@MessageMapping</span>(<span class="string">"/bind/&#123;resource&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">bindResource</span><span class="params">(Message message,</span></span></span><br><span class="line"><span class="function"><span class="params">                             @DestinationVariable String resource)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stompUserRepository.addRepo(StompHeaderAccessor.wrap(message).getUser(),resource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MessageMapping</span>(<span class="string">"/release/&#123;resource&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">releaseResource</span><span class="params">(Message message,@DestinationVariable String resource)</span></span>&#123;</span><br><span class="line">        stompUserRepository.releaseResource(StompHeaderAccessor.wrap(message).getUser(),resource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>测试html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/stomp.js/2.3.3/stomp.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        const userId = 'mits3333333333333';</span></span><br><span class="line"><span class="undefined">        var sendMessage = null;</span></span><br><span class="line"><span class="undefined">        var disConnect = null;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function connect() &#123;</span></span><br><span class="line"><span class="undefined">            var client = Stomp.client('ws://127.0.0.1:18080/ws/websocket');</span></span><br><span class="line"><span class="undefined">            client.heartbeat.outgoing = 5000;</span></span><br><span class="line"><span class="undefined">            client.heartbeat.incoming = 0;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            client.connect(&#123;</span></span><br><span class="line"><span class="undefined">                userId: userId</span></span><br><span class="line"><span class="undefined">            &#125;, function (succ) &#123;</span></span><br><span class="line"><span class="undefined">                console.log('client connect success:', succ);</span></span><br><span class="line"><span class="undefined">                updateState('连接成功');</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                // // 订阅消息</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                client.subscribe("/topic/bind/123456",onMessage);</span></span><br><span class="line"><span class="undefined">            &#125;, function (error) &#123;</span></span><br><span class="line"><span class="undefined">                console.log('client connect error:', error);</span></span><br><span class="line"><span class="undefined">                updateState('连接失败');</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">            sendMessage = function (destination, headers, body) &#123;</span></span><br><span class="line"><span class="undefined">                client.send(destination, headers, body)</span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="undefined">            disConnect = function () &#123;</span></span><br><span class="line"><span class="undefined">                client.disconnect();</span></span><br><span class="line"><span class="undefined">                console.log('client connect break')</span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            sendMessage = function (destination, headers, body) &#123;</span></span><br><span class="line"><span class="undefined">                client.send(destination, headers, body)</span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function onMessage(message) &#123;</span></span><br><span class="line"><span class="undefined">            console.log("receive message ["+message.body+"]");</span></span><br><span class="line"><span class="undefined">            //insertChat(false, message.headers.destination, message.body)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function updateState(state) &#123;</span></span><br><span class="line"><span class="undefined">            console.log('[connected] state is --&gt;'+state)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function send(destination,message) &#123;</span></span><br><span class="line"><span class="undefined">            // var destination=document.getElementById("destination").value;</span></span><br><span class="line"><span class="undefined">            // var message=document.getElementById("message").value;</span></span><br><span class="line"><span class="undefined">            // var destination='/topic/bind/123456';</span></span><br><span class="line"><span class="undefined">            if(sendMessage==null)&#123;</span></span><br><span class="line"><span class="undefined">                console.error("ws connect break!!!");</span></span><br><span class="line"><span class="undefined">                return ;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            sendMessage(destination,&#123;&#125;,message);</span></span><br><span class="line"><span class="undefined">            console.log("send message ----&gt;" +destination +"*****"+ message)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>stomp-test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>stomp-test<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"connect"</span> <span class="attr">onclick</span>=<span class="string">"connect()"</span>&gt;</span> connect <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"send topic message"</span> <span class="attr">onclick</span>=<span class="string">"send('/topic/bind/123456','this is topic message')"</span>&gt;</span>sendTopic()<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"send app message"</span> <span class="attr">onclick</span>=<span class="string">"send('/app/test/user123','this is app message')"</span>&gt;</span>sendApp()<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="基于MQ的STOMP实现"><a href="#基于MQ的STOMP实现" class="headerlink" title="基于MQ的STOMP实现"></a>基于MQ的STOMP实现</h2><p>stomp.js不仅可以结合spring-websocket使用，还可以介入支持stomp协议的MQ例如 active mq,rabbit mq等。</p><p>使用mq处理发布订阅模式的消息1 可以基于mq的基本功能保证消息的可靠性，2 省去了服务端对消息发送接收的代码量。但是也有个很大的弊端就是mq只关心消息发送接收及存储，业务上的一些特殊需求没办法做到扩展(可能有但是没做调查)。如果没有业务扩展建议直接使用可靠度更高的mq。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/chszs/article/details/46592777" target="_blank" rel="noopener">https://blog.csdn.net/chszs/article/details/46592777</a></p><p><a href="https://blog.csdn.net/HelloXiaoYueYue/article/details/51006069" target="_blank" rel="noopener">https://blog.csdn.net/HelloXiaoYueYue/article/details/51006069</a></p><p><a href="http://lsxj615.com/2016/08/17/STOMP-over-WebSocket" target="_blank" rel="noopener">http://lsxj615.com/2016/08/17/STOMP-over-WebSocket</a></p><p><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-rabbit-mq/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/opensource/os-cn-rabbit-mq/index.html</a></p><p><a href="https://www.zhihu.com/question/59564853/answer/494835225" target="_blank" rel="noopener">https://www.zhihu.com/question/59564853/answer/494835225</a></p><p><a href="https://blog.csdn.net/jqsad/article/details/77745379" target="_blank" rel="noopener">https://blog.csdn.net/jqsad/article/details/77745379</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;stomp是一个协议，用于处理&lt;/p&gt;
&lt;h2 id=&quot;http、websocket、stomp的关系&quot;&gt;&lt;a href=&quot;#http、we
      
    
    </summary>
    
      <category term="基础" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="STOMP" scheme="http://yoursite.com/tags/STOMP/"/>
    
      <category term="WebSocket" scheme="http://yoursite.com/tags/WebSocket/"/>
    
  </entry>
  
  <entry>
    <title>我的个人博客网站如何搭建的</title>
    <link href="http://yoursite.com/2019/04/23/%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95%E9%A1%B5%E9%9D%A2/"/>
    <id>http://yoursite.com/2019/04/23/这是一个测试页面/</id>
    <published>2019-04-23T01:15:29.000Z</published>
    <updated>2019-04-23T06:28:38.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为啥要搭建个人博客"><a href="#为啥要搭建个人博客" class="headerlink" title="为啥要搭建个人博客"></a>为啥要搭建个人博客</h2><p>作为一个程序员，知识迭代的速度远超其他职业，往往是一边喊着别更新了老子学不动了，可是想想自己还能干啥，好像也不会干别的啥那就只能硬着头继续学啦。</p><p>学习的过程中往往是学完了，当时感觉明白过了没几天可能就忘了。人的记忆就是这样，学会了总结成自己的东西才能记得更牢。</p><h3 id="现有平台-VS-个人博客网站"><a href="#现有平台-VS-个人博客网站" class="headerlink" title="现有平台 VS 个人博客网站"></a>现有平台 VS 个人博客网站</h3><p>现有平台(csdn之类)</p><p>优点</p><ul><li>服务有保证</li><li>简单只要负责写就行了</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;为啥要搭建个人博客&quot;&gt;&lt;a href=&quot;#为啥要搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;为啥要搭建个人博客&quot;&gt;&lt;/a&gt;为啥要搭建个人博客&lt;/h2&gt;&lt;p&gt;作为一个程序员，知识迭代的速度远超其他职业，往往是一边喊着别更新了老子学不动了，可是
      
    
    </summary>
    
      <category term="搭建个人博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/04/23/hello-world/"/>
    <id>http://yoursite.com/2019/04/23/hello-world/</id>
    <published>2019-04-23T00:58:34.700Z</published>
    <updated>2019-04-23T00:58:34.700Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
